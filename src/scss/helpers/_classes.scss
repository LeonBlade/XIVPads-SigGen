//------------------------------------------------------------------------------
//       class definitions.
//       some stolen from LESS Elements 0.6
//       by Dmitry Fadeyev
//       http://lesselements.com
//       I just converted them to work with SCSS
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
//      remove all "appearance" from elements
//-----------------------------------------------------------------------------
@mixin appearance {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

//-----------------------------------------------------------------------------
//      simple horizontal two-colour css gradient
//-----------------------------------------------------------------------------
@mixin horizontal-gradient($color1, $location1, $color2, $location2) {
    background-image: -moz-linear-gradient(left,  $color1 $location1, $color2 $location2); /* FF3.6+ */
    background-image: -webkit-gradient(linear, left top, right top, color-stop($location1,$color1), color-stop($location2,$color2)); /* Chrome,Safari4+ */
    background-image: -webkit-linear-gradient(left,  $color1 $location1, $color2 $location2); /* Chrome10+,Safari5.1+ */
    background-image: -o-linear-gradient(left,  $color1 $location1, $color2 $location2); /* Opera 11.10+ */
    background-image: -ms-linear-gradient(left,  $color1 $location1, $color2 $location2); /* IE10+ */
    background-image: linear-gradient(to right,  $color1 $location1, $color2 $location2); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=1 ); /* IE6-9 */
    background-size: 100% 100%;
}

//-----------------------------------------------------------------------------
//      simple vertical two-colour css gradient
//-----------------------------------------------------------------------------
@mixin vertical-gradient($color1, $location1, $color2, $location2) {
    background-image: -moz-linear-gradient(top,  $color1 $location1, $color2 $location2); /* FF3.6+ */
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop($location1,$color1), color-stop($location2,$color2)); /* Chrome,Safari4+ */
    background-image: -webkit-linear-gradient(top,  $color1 $location1, $color2 $location2); /* Chrome10+,Safari5.1+ */
    background-image: -o-linear-gradient(top,  $color1 $location1, $color2 $location2); /* Opera 11.10+ */
    background-image: -ms-linear-gradient(top,  $color1 $location1, $color2 $location2); /* IE10+ */
    background-image: linear-gradient(to bottom,  $color1 $location1, $color2 $location2); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=0 ); /* IE6-9 */
    background-size: 100% 100%;
}

//-----------------------------------------------------------------------------
//      Magical vertical align centre
//      (support: http://caniuse.com/#search=translate)
//      Found here: http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
//-----------------------------------------------------------------------------
@mixin valign {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

//-----------------------------------------------------------------------------
//      Preserve 3d on parent element to avoid half pixel blur
//-----------------------------------------------------------------------------
@mixin valign-parent {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

//-----------------------------------------------------------------------------
//      Clearfix as a mixin
//-----------------------------------------------------------------------------
@mixin cf() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}

//-----------------------------------------------------------------------------
//      box sizing
//-----------------------------------------------------------------------------
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

//------------------------------------------------------------------------------
//       text replacement - newer style.
//       Hat tip: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
//       split apart the background statement and added "display"
//       as an option to allow inline-block, etc
//-----------------------------------------------------------------------------
@mixin imgreplace($width, $height, $img, $colour: transparent, $imgpos: top left, $imgrepeat: no-repeat, $display: block) {
    display: $display;
    text-indent: 110%;
    white-space: nowrap;
    overflow: hidden;
    width: $width;
    height: $height;
    background-color: $colour;
    background-image: url($img);
    background-position: $imgpos;
    background-repeat: $imgrepeat;
}

//------------------------------------------------------------------------------
//       sizing shortcuts
//-----------------------------------------------------------------------------
@mixin size($width, $height) {
    width: $width;
    height: $height;
}

@mixin square($size) {
    @include size($size, $size);
}

//------------------------------------------------------------------------------
//       vertical centering (HAVE to specify a height for this method!)
//-----------------------------------------------------------------------------
@mixin vertical-centre($height) {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: $height;
    margin: auto;
    position: absolute;
}

//------------------------------------------------------------------------------
//       John's super duper alignment thingy
//
//       child elements under whatever you set this on should probably
//       have something like this set on them:
//
//           vertical-align: top;
//           display: inline-block;
//           text-align: left;
//
//       or use the justify-children mixin
//-----------------------------------------------------------------------------
@mixin justify() {
    text-align: justify;
    display: block;
    height: auto;

    &:after {
        border: 0 none;
        content: "";
        display: inline-block;
        height: 1px;
        width: 100%;
        position: relative;
    }
}

@mixin justify-children($textalign: left) {
    position: relative;
    vertical-align: top;
    display: inline-block;
    text-align: $textalign;
}

//------------------------------------------------------------------------------
//       placeholder text
//-----------------------------------------------------------------------------*
@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder            { color: $color; } // Firefox 4-18
  &::-moz-placeholder           { color: $color; } // Firefox 19+
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

//------------------------------------------------------------------------------
//       background sizing
//-----------------------------------------------------------------------------
@mixin background-size($size) {
    -webkit-background-size: $size;
       -moz-background-size: $size;
         -o-background-size: $size;
            background-size: $size;
}

//------------------------------------------------------------------------------
//       user select - For selecting text on the page
//-----------------------------------------------------------------------------
@mixin user-select($select) {
    -webkit-user-select: $select;
       -moz-user-select: $select;
        -ms-user-select: $select;
         -o-user-select: $select;
            user-select: $select;
}

//------------------------------------------------------------------------------
//       border radius
//-----------------------------------------------------------------------------
@mixin border-radius($radius: 5px) {
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
            border-radius: $radius;
}

//------------------------------------------------------------------------------
//       optional hyphenation
//-----------------------------------------------------------------------------
@mixin hyphens($mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: $mode;
       -moz-hyphens: $mode;
        -ms-hyphens: $mode;
         -o-hyphens: $mode;
            hyphens: $mode;
}

//------------------------------------------------------------------------------
//       box shadow / inner shadow
//-----------------------------------------------------------------------------
@mixin box-shadow($horizontal:0, $vertical:1px, $blur:3px, $spread:0, $shadowcolor: rgba(0,0,0,0.4)) {
    -webkit-box-shadow: $horizontal $vertical $blur $spread $shadowcolor;
       -moz-box-shadow: $horizontal $vertical $blur $spread $shadowcolor;
            box-shadow: $horizontal $vertical $blur $spread $shadowcolor;
}

@mixin box-shadow-inset($horizontal:0, $vertical:1px, $blur:3px, $spread:0, $shadowcolor: rgba(0,0,0,0.4)) {
    -webkit-box-shadow: inset $horizontal $vertical $blur $spread $shadowcolor;
       -moz-box-shadow: inset $horizontal $vertical $blur $spread $shadowcolor;
            box-shadow: inset $horizontal $vertical $blur $spread $shadowcolor;
}

//------------------------------------------------------------------------------
//       transitions/transformations/scale
//-----------------------------------------------------------------------------
@mixin transition($transition) {
    -webkit-transition: $transition;
       -moz-transition: $transition;
        -ms-transition: $transition;
         -o-transition: $transition;
            transition: $transition;
}

@mixin translate3d($x: 0, $y: 0, $z: 0) {
    -webkit-transform: translate3d($x, $y, $z);
       -moz-transform: translate3d($x, $y, $z);
        -ms-transform: translate3d($x, $y, $z);
         -o-transform: translate3d($x, $y, $z);
            transform: translate3d($x, $y, $z);
}

@mixin translate($x: 0, $y: 0) {
    -webkit-transform: translate($x, $y);
       -moz-transform: translate($x, $y);
        -ms-transform: translate($x, $y);
         -o-transform: translate($x, $y);
            transform: translate($x, $y);
}

@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
       -moz-transform: rotate($degrees);
        -ms-transform: rotate($degrees);
         -o-transform: rotate($degrees);
            transform: rotate($degrees);
}

@mixin scale($ratio: 1.5){
    -webkit-transform:scale($ratio);
       -moz-transform:scale($ratio);
        -ms-transform:scale($ratio);
         -o-transform:scale($ratio);
            transform:scale($ratio);
}

@mixin backface($visibility: hidden) {
    -webkit-backface-visibility: $visibility;
       -moz-backface-visibility: $visibility;
            backface-visibility: $visibility;
}

//------------------------------------------------------------------------------
//       opacity
//-----------------------------------------------------------------------------
@mixin opacity($opacity: 0.5) {
    -webkit-opacity: $opacity;
     -khtml-opacity: $opacity;
       -moz-opacity: $opacity;
            opacity: $opacity;
}

//------------------------------------------------------------------------------
//       columns
//-----------------------------------------------------------------------------
@mixin columns($colwidth: 250px, $colcount: 0, $colgap: 50px, $columnRuleColor: #EEE, $columnRuleStyle: solid, $columnRuleWidth: 1px) {
    -moz-column-width: $colwidth;
    -moz-column-count: $colcount;
    -moz-column-gap: $colgap;
    -moz-column-rule-color: $columnRuleColor;
    -moz-column-rule-style: $columnRuleStyle;
    -moz-column-rule-width: $columnRuleWidth;

    -webkit-column-width: $colwidth;
    -webkit-column-count: $colcount;
    -webkit-column-gap: $colgap;
    -webkit-column-rule-color: $columnRuleColor;
    -webkit-column-rule-style: $columnRuleStyle;
    -webkit-column-rule-width: $columnRuleWidth;

    column-width: $colwidth;
    column-count: $colcount;
    column-gap: $colgap;
    column-rule-color: $columnRuleColor;
    column-rule-style: $columnRuleStyle;
    column-rule-width: $columnRuleWidth;
}

//------------------------------------------------------------------------------
//         Stolen from: http://minimalmonkey.com/sass-triangle-mixin/
//         and kind of converted from SASS to LESS, then back to SCSS
//-----------------------------------------------------------------------------
@mixin arrow($width: 20px, $height: 20px, $color: #000, $direction: down) {
    width: 0;
    height: 0;

    @if $direction == down {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $height solid $color;
    }

    @if $direction == up {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-bottom: $height solid $color;
    }

    @if $direction == left {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-right: $width solid $color;
    }

    @if $direction == right {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-left: $width solid $color;
    }
}

//------------------------------------------------------------------------------
//         CSS keyframes
//         putting these here for safekeeping:
//         http://jsfiddle.net/simurai/CGmCe/light/
//         http://codepen.io/Keyamoon/pen/aHxuq
//-----------------------------------------------------------------------------
@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
       @content;
    }

    @-moz-keyframes #{$name} {
       @content;
    }

    @-ms-keyframes #{$name} {
       @content;
    }

    @-o-keyframes #{$name} {
       @content;
    }

    @keyframes #{$name} {
       @content;
    }
}

//------------------------------------------------------------------------------
//         CSS animations
//         $easing can be either easing type OR could be steps()
//------------------------------------------------------------------------------
@mixin animation($animationName, $duration: 1s, $easing: ease, $repeat: infinite) {
    -webkit-animation: $animationName $duration $easing $repeat;
       -moz-animation: $animationName $duration $easing $repeat;
        -ms-animation: $animationName $duration $easing $repeat;
         -o-animation: $animationName $duration $easing $repeat;
            animation: $animationName $duration $easing $repeat;
}